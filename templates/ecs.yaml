AWSTemplateFormatVersion: '2010-09-09'
Description: Template para criar um ambiente WordPress com ECS, ALB, e EFS.

Parameters:
  KeyName:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Description: Name of an existing EC2 KeyPair to enable SSH access to the ECS instances.
  VpcId:
    Type: 'AWS::EC2::VPC::Id'
    Description: Select a VPC that allows instances to access the Internet.
  SubnetId:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: Select at least two subnets in your selected VPC.
  DesiredCapacity:
    Type: Number
    Default: '1'
    Description: Number of instances to launch in your ECS cluster.
  MaxSize:
    Type: Number
    Default: '1'
    Description: Maximum number of instances that can be launched in your ECS cluster.
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
    ConstraintDescription: Please choose a valid instance type.

# Associação de nomes de regiões da AWS a IDs de imagens de máquina:
Mappings:
  AWSRegionToAMI:
    us-east-1:
      AMIID: ami-09bee01cc997a78a6
    us-east-2:
      AMIID: ami-0a9e12068cb98a01d
    us-west-1:
      AMIID: ami-0fa6c8d131a220017
    us-west-2:
      AMIID: ami-078c97cf1cefd1b38
    eu-west-1:
      AMIID: ami-0c9ef930279337028
    eu-central-1:
      AMIID: ami-065c1e34da68f2b02
    ap-northeast-1:
      AMIID: ami-02265963d1614d04d
    ap-southeast-1:
      AMIID: ami-0b68661b29b9e058c
    ap-southeast-2:
      AMIID: ami-00e4b147599c13588

# Definição dos recursos:
Resources:
  # Criação do cluster
  ECSCluster:
    Type: 'AWS::ECS::Cluster'

  # Grupos de segurança ECS:
  EcsSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: ECS Security Group
      VpcId: !Ref VpcId
  EcsSecurityGroupHTTPinbound:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref EcsSecurityGroup
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIp: 0.0.0.0/0
  EcsSecurityGroupSSHinbound:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref EcsSecurityGroup
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: 0.0.0.0/0
  
  # Grupo de segurança para contêineres do WordPress no ECS:
  WordPressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for WordPress ECS containers
      VpcId: !Ref VPC

  # Cluster do ECS para o WordPress:
  WordPressCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref ClusterName

  # Grupo de destino do ALB:
  WordPressTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: WordPressTargetGroup
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VPC
      HealthCheckProtocol: HTTP
      HealthCheckPort: 80
      HealthCheckPath: /index.html
      Matcher:
        HttpCode: 200

  # Definição da tarefa do WordPress no ECS:
  WordPressTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: WordPress
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt WordPressExecutionRole.Arn
      RequiresCompatibilities:
        - EC2
      Cpu: '256'
      Memory: '512'
      ContainerDefinitions:
        - Name: WordPressContainer
          Image: wordpress:latest  # Substitua pela imagem do WordPress desejada
          PortMappings:
            - ContainerPort: 80

  # Serviço do WordPress no ECS:
  WordPressService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref WordPressCluster
      LaunchType: EC2
      DesiredCount: 2
      TaskDefinition: !Ref WordPressTaskDefinition
      LoadBalancers:
        - ContainerName: WordPressContainer
          ContainerPort: 80
          TargetGroupArn: !Ref WordPressTargetGroup

  # Template de lançamento EC2:
  WordPressLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: WordPressLaunchTemplate
      VersionDescription: Initial version
      LaunchTemplateData:
        InstanceType: !Ref InstanceType
        SecurityGroupIds:
          - !GetAtt WordPressSecurityGroup.GroupId
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            echo "ECS_CLUSTER=${ClusterName}" >> /etc/ecs/ecs.config

  # Sistema de arquivos EFS para o WordPress:
  WordPressEFS:
    Type: AWS::EFS::FileSystem
    Properties:
      FileSystemTags:
        - Key: Name
          Value: WordPressEFS

  # Pontos de montagem do EFS em sub-redes A e B:
  WordPressEFSMountTargetA:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref WordPressEFS
      SubnetId: !Ref SubnetA
      SecurityGroups:
        - !GetAtt WordPressSecurityGroup.GroupId

  WordPressEFSMountTargetB:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref WordPressEFS
      SubnetId: !Ref SubnetB
      SecurityGroups:
        - !GetAtt WordPressSecurityGroup.GroupId

  # Função de execução do WordPress no ECS:
  WordPressExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: WordPressExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  # Balanceador de carga do ALB para o WordPress:
  WordPressLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      AvailabilityZones:
        - !GetAtt SubnetA.AvailabilityZone
        - !GetAtt SubnetB.AvailabilityZone
      SecurityGroups:
        - !GetAtt WordPressSecurityGroup.GroupId
      Listeners:
        - LoadBalancerPort: '80'
          InstancePort: '80'
          Protocol: HTTP
      Scheme: internet-facing

# Saídas:
Outputs:
  WordPressLoadBalancerDNSName:
    Description: DNS Name do Balanceador de Carga do WordPress.
    Value: !GetAtt WordPressLoadBalancer.DNSName

  WordPressEFSId:
    Description: ID do sistema de arquivos EFS do WordPress.
    Value: !Ref WordPressEFS
